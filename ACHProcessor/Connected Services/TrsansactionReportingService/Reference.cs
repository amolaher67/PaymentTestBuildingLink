//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ACHProcessor.TrsansactionReportingService {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="https://ssl.selectpayment.com/PV", ConfigurationName="TrsansactionReportingService.TransactionReportingSoap")]
    public interface TransactionReportingSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ssl.selectpayment.com/PV/TransactionReport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet TransactionReport(
                    long storeId, 
                    string storeKey, 
                    int entityId, 
                    ACHProcessor.TrsansactionReportingService.WSDisplayFields[] wsdisplayFields, 
                    int[] locationIds, 
                    ACHProcessor.TrsansactionReportingService.WSTransactionStatus[] wstransStatus, 
                    ACHProcessor.TrsansactionReportingService.WSSettlementType[] wssettlementType, 
                    ACHProcessor.TrsansactionReportingService.WSPaymentType wspaymentType, 
                    ACHProcessor.TrsansactionReportingService.WSPaymentOrigin[] wspaymentOrigin, 
                    ACHProcessor.TrsansactionReportingService.WSSettlementStatus[] wssettlementStatus, 
                    ACHProcessor.TrsansactionReportingService.WSAuthResponseCode wsauthResponseCode, 
                    ACHProcessor.TrsansactionReportingService.WSOperationType wsopType, 
                    System.DateTime beginTransDate, 
                    System.DateTime endTransDate, 
                    ACHProcessor.TrsansactionReportingService.WSReportDateType wsdateType, 
                    string fromAmount, 
                    string toAmount);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ssl.selectpayment.com/PV/TransactionReport", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> TransactionReportAsync(
                    long storeId, 
                    string storeKey, 
                    int entityId, 
                    ACHProcessor.TrsansactionReportingService.WSDisplayFields[] wsdisplayFields, 
                    int[] locationIds, 
                    ACHProcessor.TrsansactionReportingService.WSTransactionStatus[] wstransStatus, 
                    ACHProcessor.TrsansactionReportingService.WSSettlementType[] wssettlementType, 
                    ACHProcessor.TrsansactionReportingService.WSPaymentType wspaymentType, 
                    ACHProcessor.TrsansactionReportingService.WSPaymentOrigin[] wspaymentOrigin, 
                    ACHProcessor.TrsansactionReportingService.WSSettlementStatus[] wssettlementStatus, 
                    ACHProcessor.TrsansactionReportingService.WSAuthResponseCode wsauthResponseCode, 
                    ACHProcessor.TrsansactionReportingService.WSOperationType wsopType, 
                    System.DateTime beginTransDate, 
                    System.DateTime endTransDate, 
                    ACHProcessor.TrsansactionReportingService.WSReportDateType wsdateType, 
                    string fromAmount, 
                    string toAmount);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ssl.selectpayment.com/PV/GetTransactionReport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ACHProcessor.TrsansactionReportingService.WSTransactionReport[] GetTransactionReport(
                    long storeId, 
                    string storeKey, 
                    int entityId, 
                    ACHProcessor.TrsansactionReportingService.WSDisplayFields[] wsdisplayFields, 
                    int[] locationIds, 
                    ACHProcessor.TrsansactionReportingService.WSTransactionStatus[] wstransStatus, 
                    ACHProcessor.TrsansactionReportingService.WSSettlementType[] wssettlementType, 
                    ACHProcessor.TrsansactionReportingService.WSPaymentType wspaymentType, 
                    ACHProcessor.TrsansactionReportingService.WSPaymentOrigin[] wspaymentOrigin, 
                    ACHProcessor.TrsansactionReportingService.WSSettlementStatus[] wssettlementStatus, 
                    ACHProcessor.TrsansactionReportingService.WSAuthResponseCode wsauthResponseCode, 
                    ACHProcessor.TrsansactionReportingService.WSOperationType wsopType, 
                    System.DateTime beginTransDate, 
                    System.DateTime endTransDate, 
                    ACHProcessor.TrsansactionReportingService.WSReportDateType wsdateType, 
                    string fromAmount, 
                    string toAmount);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ssl.selectpayment.com/PV/GetTransactionReport", ReplyAction="*")]
        System.Threading.Tasks.Task<ACHProcessor.TrsansactionReportingService.WSTransactionReport[]> GetTransactionReportAsync(
                    long storeId, 
                    string storeKey, 
                    int entityId, 
                    ACHProcessor.TrsansactionReportingService.WSDisplayFields[] wsdisplayFields, 
                    int[] locationIds, 
                    ACHProcessor.TrsansactionReportingService.WSTransactionStatus[] wstransStatus, 
                    ACHProcessor.TrsansactionReportingService.WSSettlementType[] wssettlementType, 
                    ACHProcessor.TrsansactionReportingService.WSPaymentType wspaymentType, 
                    ACHProcessor.TrsansactionReportingService.WSPaymentOrigin[] wspaymentOrigin, 
                    ACHProcessor.TrsansactionReportingService.WSSettlementStatus[] wssettlementStatus, 
                    ACHProcessor.TrsansactionReportingService.WSAuthResponseCode wsauthResponseCode, 
                    ACHProcessor.TrsansactionReportingService.WSOperationType wsopType, 
                    System.DateTime beginTransDate, 
                    System.DateTime endTransDate, 
                    ACHProcessor.TrsansactionReportingService.WSReportDateType wsdateType, 
                    string fromAmount, 
                    string toAmount);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ssl.selectpayment.com/PV/HistoricalEventReport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet HistoricalEventReport(
                    long storeId, 
                    string storeKey, 
                    int entityId, 
                    ACHProcessor.TrsansactionReportingService.WSDisplayFields[] wsdisplayFields, 
                    int[] locationIds, 
                    ACHProcessor.TrsansactionReportingService.WSTransactionEvent wstransEvent, 
                    ACHProcessor.TrsansactionReportingService.WSTransactionStatus[] wstransStatus, 
                    ACHProcessor.TrsansactionReportingService.WSSettlementType[] wssettlementType, 
                    ACHProcessor.TrsansactionReportingService.WSPaymentType wspaymentType, 
                    ACHProcessor.TrsansactionReportingService.WSPaymentOrigin[] wspaymentOrigin, 
                    ACHProcessor.TrsansactionReportingService.WSSettlementStatus[] wssettlementStatus, 
                    ACHProcessor.TrsansactionReportingService.WSAuthResponseCode wsauthResponseCode, 
                    ACHProcessor.TrsansactionReportingService.WSOperationType wsopType, 
                    System.DateTime beginTransDate, 
                    System.DateTime endTransDate, 
                    string fromAmount, 
                    string toAmount);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ssl.selectpayment.com/PV/HistoricalEventReport", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> HistoricalEventReportAsync(
                    long storeId, 
                    string storeKey, 
                    int entityId, 
                    ACHProcessor.TrsansactionReportingService.WSDisplayFields[] wsdisplayFields, 
                    int[] locationIds, 
                    ACHProcessor.TrsansactionReportingService.WSTransactionEvent wstransEvent, 
                    ACHProcessor.TrsansactionReportingService.WSTransactionStatus[] wstransStatus, 
                    ACHProcessor.TrsansactionReportingService.WSSettlementType[] wssettlementType, 
                    ACHProcessor.TrsansactionReportingService.WSPaymentType wspaymentType, 
                    ACHProcessor.TrsansactionReportingService.WSPaymentOrigin[] wspaymentOrigin, 
                    ACHProcessor.TrsansactionReportingService.WSSettlementStatus[] wssettlementStatus, 
                    ACHProcessor.TrsansactionReportingService.WSAuthResponseCode wsauthResponseCode, 
                    ACHProcessor.TrsansactionReportingService.WSOperationType wsopType, 
                    System.DateTime beginTransDate, 
                    System.DateTime endTransDate, 
                    string fromAmount, 
                    string toAmount);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ssl.selectpayment.com/PV/GetHistoricalEventReport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ACHProcessor.TrsansactionReportingService.WSEventReport[] GetHistoricalEventReport(
                    long storeId, 
                    string storeKey, 
                    int entityId, 
                    ACHProcessor.TrsansactionReportingService.WSDisplayFields[] wsdisplayFields, 
                    int[] locationIds, 
                    ACHProcessor.TrsansactionReportingService.WSTransactionEvent wstransEvent, 
                    ACHProcessor.TrsansactionReportingService.WSTransactionStatus[] wstransStatus, 
                    ACHProcessor.TrsansactionReportingService.WSSettlementType[] wssettlementType, 
                    ACHProcessor.TrsansactionReportingService.WSPaymentType wspaymentType, 
                    ACHProcessor.TrsansactionReportingService.WSPaymentOrigin[] wspaymentOrigin, 
                    ACHProcessor.TrsansactionReportingService.WSSettlementStatus[] wssettlementStatus, 
                    ACHProcessor.TrsansactionReportingService.WSAuthResponseCode wsauthResponseCode, 
                    ACHProcessor.TrsansactionReportingService.WSOperationType wsopType, 
                    System.DateTime beginTransDate, 
                    System.DateTime endTransDate, 
                    string fromAmount, 
                    string toAmount);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ssl.selectpayment.com/PV/GetHistoricalEventReport", ReplyAction="*")]
        System.Threading.Tasks.Task<ACHProcessor.TrsansactionReportingService.WSEventReport[]> GetHistoricalEventReportAsync(
                    long storeId, 
                    string storeKey, 
                    int entityId, 
                    ACHProcessor.TrsansactionReportingService.WSDisplayFields[] wsdisplayFields, 
                    int[] locationIds, 
                    ACHProcessor.TrsansactionReportingService.WSTransactionEvent wstransEvent, 
                    ACHProcessor.TrsansactionReportingService.WSTransactionStatus[] wstransStatus, 
                    ACHProcessor.TrsansactionReportingService.WSSettlementType[] wssettlementType, 
                    ACHProcessor.TrsansactionReportingService.WSPaymentType wspaymentType, 
                    ACHProcessor.TrsansactionReportingService.WSPaymentOrigin[] wspaymentOrigin, 
                    ACHProcessor.TrsansactionReportingService.WSSettlementStatus[] wssettlementStatus, 
                    ACHProcessor.TrsansactionReportingService.WSAuthResponseCode wsauthResponseCode, 
                    ACHProcessor.TrsansactionReportingService.WSOperationType wsopType, 
                    System.DateTime beginTransDate, 
                    System.DateTime endTransDate, 
                    string fromAmount, 
                    string toAmount);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ssl.selectpayment.com/PV/GetHistoricalEventWithTransactionDetailReport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ACHProcessor.TrsansactionReportingService.WSEventWithTransactionDetailReport[] GetHistoricalEventWithTransactionDetailReport(
                    long storeId, 
                    string storeKey, 
                    int entityId, 
                    ACHProcessor.TrsansactionReportingService.WSDisplayFields[] wsdisplayFields, 
                    int[] locationIds, 
                    ACHProcessor.TrsansactionReportingService.WSTransactionEvent wstransEvent, 
                    ACHProcessor.TrsansactionReportingService.WSTransactionStatus[] wstransStatus, 
                    ACHProcessor.TrsansactionReportingService.WSSettlementType[] wssettlementType, 
                    ACHProcessor.TrsansactionReportingService.WSPaymentType wspaymentType, 
                    ACHProcessor.TrsansactionReportingService.WSPaymentOrigin[] wspaymentOrigin, 
                    ACHProcessor.TrsansactionReportingService.WSSettlementStatus[] wssettlementStatus, 
                    ACHProcessor.TrsansactionReportingService.WSAuthResponseCode wsauthResponseCode, 
                    ACHProcessor.TrsansactionReportingService.WSOperationType wsopType, 
                    ACHProcessor.TrsansactionReportingService.WSFaceFeeType wsfaceFeeType, 
                    System.DateTime beginTransDate, 
                    System.DateTime endTransDate, 
                    string fromAmount, 
                    string toAmount);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ssl.selectpayment.com/PV/GetHistoricalEventWithTransactionDetailReport", ReplyAction="*")]
        System.Threading.Tasks.Task<ACHProcessor.TrsansactionReportingService.WSEventWithTransactionDetailReport[]> GetHistoricalEventWithTransactionDetailReportAsync(
                    long storeId, 
                    string storeKey, 
                    int entityId, 
                    ACHProcessor.TrsansactionReportingService.WSDisplayFields[] wsdisplayFields, 
                    int[] locationIds, 
                    ACHProcessor.TrsansactionReportingService.WSTransactionEvent wstransEvent, 
                    ACHProcessor.TrsansactionReportingService.WSTransactionStatus[] wstransStatus, 
                    ACHProcessor.TrsansactionReportingService.WSSettlementType[] wssettlementType, 
                    ACHProcessor.TrsansactionReportingService.WSPaymentType wspaymentType, 
                    ACHProcessor.TrsansactionReportingService.WSPaymentOrigin[] wspaymentOrigin, 
                    ACHProcessor.TrsansactionReportingService.WSSettlementStatus[] wssettlementStatus, 
                    ACHProcessor.TrsansactionReportingService.WSAuthResponseCode wsauthResponseCode, 
                    ACHProcessor.TrsansactionReportingService.WSOperationType wsopType, 
                    ACHProcessor.TrsansactionReportingService.WSFaceFeeType wsfaceFeeType, 
                    System.DateTime beginTransDate, 
                    System.DateTime endTransDate, 
                    string fromAmount, 
                    string toAmount);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ssl.selectpayment.com/PV/GetHistoricalEvents", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ACHProcessor.TrsansactionReportingService.WSEventReport[] GetHistoricalEvents(
                    long storeId, 
                    string storeKey, 
                    int entityId, 
                    ACHProcessor.TrsansactionReportingService.WSDisplayFields[] wsdisplayFields, 
                    int[] locationIds, 
                    ACHProcessor.TrsansactionReportingService.WSTransactionEvent[] wstransEvents, 
                    ACHProcessor.TrsansactionReportingService.WSTransactionStatus[] wstransStatus, 
                    ACHProcessor.TrsansactionReportingService.WSSettlementType[] wssettlementType, 
                    ACHProcessor.TrsansactionReportingService.WSPaymentType wspaymentType, 
                    ACHProcessor.TrsansactionReportingService.WSPaymentOrigin[] wspaymentOrigin, 
                    ACHProcessor.TrsansactionReportingService.WSSettlementStatus[] wssettlementStatus, 
                    ACHProcessor.TrsansactionReportingService.WSAuthResponseCode wsauthResponseCode, 
                    ACHProcessor.TrsansactionReportingService.WSOperationType wsopType, 
                    System.DateTime beginTransDate, 
                    System.DateTime endTransDate, 
                    string fromAmount, 
                    string toAmount);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ssl.selectpayment.com/PV/GetHistoricalEvents", ReplyAction="*")]
        System.Threading.Tasks.Task<ACHProcessor.TrsansactionReportingService.WSEventReport[]> GetHistoricalEventsAsync(
                    long storeId, 
                    string storeKey, 
                    int entityId, 
                    ACHProcessor.TrsansactionReportingService.WSDisplayFields[] wsdisplayFields, 
                    int[] locationIds, 
                    ACHProcessor.TrsansactionReportingService.WSTransactionEvent[] wstransEvents, 
                    ACHProcessor.TrsansactionReportingService.WSTransactionStatus[] wstransStatus, 
                    ACHProcessor.TrsansactionReportingService.WSSettlementType[] wssettlementType, 
                    ACHProcessor.TrsansactionReportingService.WSPaymentType wspaymentType, 
                    ACHProcessor.TrsansactionReportingService.WSPaymentOrigin[] wspaymentOrigin, 
                    ACHProcessor.TrsansactionReportingService.WSSettlementStatus[] wssettlementStatus, 
                    ACHProcessor.TrsansactionReportingService.WSAuthResponseCode wsauthResponseCode, 
                    ACHProcessor.TrsansactionReportingService.WSOperationType wsopType, 
                    System.DateTime beginTransDate, 
                    System.DateTime endTransDate, 
                    string fromAmount, 
                    string toAmount);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ssl.selectpayment.com/PV/CreditandDebitReports", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet CreditandDebitReports(long storeId, string storeKey, int entityId, int[] locationIds, System.DateTime beginDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ssl.selectpayment.com/PV/CreditandDebitReports", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> CreditandDebitReportsAsync(long storeId, string storeKey, int entityId, int[] locationIds, System.DateTime beginDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ssl.selectpayment.com/PV/GetCreditandDebitReports", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ACHProcessor.TrsansactionReportingService.WSCreditDebitReport[] GetCreditandDebitReports(long storeId, string storeKey, int entityId, int[] locationIds, System.DateTime beginDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ssl.selectpayment.com/PV/GetCreditandDebitReports", ReplyAction="*")]
        System.Threading.Tasks.Task<ACHProcessor.TrsansactionReportingService.WSCreditDebitReport[]> GetCreditandDebitReportsAsync(long storeId, string storeKey, int entityId, int[] locationIds, System.DateTime beginDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ssl.selectpayment.com/PV/CreditsandDebitsTransactionDetailReport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ACHProcessor.TrsansactionReportingService.WSSettlementBatch[] CreditsandDebitsTransactionDetailReport(long storeId, string storeKey, int entityId, long batchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ssl.selectpayment.com/PV/CreditsandDebitsTransactionDetailReport", ReplyAction="*")]
        System.Threading.Tasks.Task<ACHProcessor.TrsansactionReportingService.WSSettlementBatch[]> CreditsandDebitsTransactionDetailReportAsync(long storeId, string storeKey, int entityId, long batchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ssl.selectpayment.com/PV/GetCollectionSettings", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ACHProcessor.TrsansactionReportingService.WSCollectionSetting[] GetCollectionSettings(long storeId, string storeKey, int entityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ssl.selectpayment.com/PV/GetCollectionSettings", ReplyAction="*")]
        System.Threading.Tasks.Task<ACHProcessor.TrsansactionReportingService.WSCollectionSetting[]> GetCollectionSettingsAsync(long storeId, string storeKey, int entityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ssl.selectpayment.com/PV/GetCollectionReportBuilder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ACHProcessor.TrsansactionReportingService.WSCollection[] GetCollectionReportBuilder(long storeId, string storeKey, int entityId, int[] locationIds, System.DateTime returnedBeginDate, System.DateTime returnedEndDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ssl.selectpayment.com/PV/GetCollectionReportBuilder", ReplyAction="*")]
        System.Threading.Tasks.Task<ACHProcessor.TrsansactionReportingService.WSCollection[]> GetCollectionReportBuilderAsync(long storeId, string storeKey, int entityId, int[] locationIds, System.DateTime returnedBeginDate, System.DateTime returnedEndDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ssl.selectpayment.com/PV/GetCollectionDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ACHProcessor.TrsansactionReportingService.WSCollectionDetail GetCollectionDetails(long storeId, string storeKey, int entityId, long collectionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ssl.selectpayment.com/PV/GetCollectionDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<ACHProcessor.TrsansactionReportingService.WSCollectionDetail> GetCollectionDetailsAsync(long storeId, string storeKey, int entityId, long collectionId);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://ssl.selectpayment.com/PV")]
    public enum WSDisplayFields {
        
        /// <remarks/>
        Transaction_DateTime,
        
        /// <remarks/>
        Transaction_Status_Name,
        
        /// <remarks/>
        Payment_Type_Name,
        
        /// <remarks/>
        Name_On_Account,
        
        /// <remarks/>
        Transaction_Number,
        
        /// <remarks/>
        Reference_Number,
        
        /// <remarks/>
        Customer_Number,
        
        /// <remarks/>
        Operation_Type_Name,
        
        /// <remarks/>
        Location_Display_Name,
        
        /// <remarks/>
        Total_Amount,
        
        /// <remarks/>
        Auth_Response_Type_Name,
        
        /// <remarks/>
        Payment_Origin_Name,
        
        /// <remarks/>
        Settlement_Status_Name,
        
        /// <remarks/>
        Display_Account_Number,
        
        /// <remarks/>
        Check_Number,
        
        /// <remarks/>
        Cust_Field_1,
        
        /// <remarks/>
        Cust_Field_2,
        
        /// <remarks/>
        Cust_Field_3,
        
        /// <remarks/>
        Field_1,
        
        /// <remarks/>
        Field_2,
        
        /// <remarks/>
        Field_3,
        
        /// <remarks/>
        Third_Party_Reference_Number,
        
        /// <remarks/>
        Audit_User_Name,
        
        /// <remarks/>
        Event_DateTime,
        
        /// <remarks/>
        Event_Type_Name,
        
        /// <remarks/>
        Event_Datastring,
        
        /// <remarks/>
        @__NONE,
        
        /// <remarks/>
        OwnerApplication,
        
        /// <remarks/>
        ReceivingApplication,
        
        /// <remarks/>
        OwnerAppReferenceId,
        
        /// <remarks/>
        ReturnCode,
        
        /// <remarks/>
        Notice_Of_Change,
        
        /// <remarks/>
        SequenceId,
        
        /// <remarks/>
        BatchNumber,
        
        /// <remarks/>
        OriginatedAs,
        
        /// <remarks/>
        IsDuplicate,
        
        /// <remarks/>
        EffectiveDate,
        
        /// <remarks/>
        FaceFeeType,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://ssl.selectpayment.com/PV")]
    public enum WSTransactionStatus {
        
        /// <remarks/>
        Declined,
        
        /// <remarks/>
        Approved,
        
        /// <remarks/>
        Error,
        
        /// <remarks/>
        Voided,
        
        /// <remarks/>
        Processed,
        
        /// <remarks/>
        Collected,
        
        /// <remarks/>
        Awaiting_Capture,
        
        /// <remarks/>
        Awaiting_Approval,
        
        /// <remarks/>
        Suspended,
        
        /// <remarks/>
        In_Collection,
        
        /// <remarks/>
        In_Research,
        
        /// <remarks/>
        Disputed,
        
        /// <remarks/>
        Uncollected_NSF,
        
        /// <remarks/>
        Invalid__Closed_Account,
        
        /// <remarks/>
        Other_Check21_Returns,
        
        /// <remarks/>
        @__NONE,
        
        /// <remarks/>
        Resolved,
        
        /// <remarks/>
        Unauthorized,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://ssl.selectpayment.com/PV")]
    public enum WSSettlementType {
        
        /// <remarks/>
        ACH,
        
        /// <remarks/>
        Check_Image,
        
        /// <remarks/>
        Card_Transfer,
        
        /// <remarks/>
        None,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://ssl.selectpayment.com/PV")]
    public enum WSPaymentType {
        
        /// <remarks/>
        @__NONE,
        
        /// <remarks/>
        Checking,
        
        /// <remarks/>
        Savings,
        
        /// <remarks/>
        Treasury_Check,
        
        /// <remarks/>
        Money_Order,
        
        /// <remarks/>
        Travelers_Check,
        
        /// <remarks/>
        Convenience_Check,
        
        /// <remarks/>
        Cashiers_Check,
        
        /// <remarks/>
        CC_Checking,
        
        /// <remarks/>
        CC_Savings,
        
        /// <remarks/>
        CC_GL,
        
        /// <remarks/>
        Visa,
        
        /// <remarks/>
        MasterCard,
        
        /// <remarks/>
        Discover__Novus,
        
        /// <remarks/>
        American_Express,
        
        /// <remarks/>
        Diners__Carte_Blanche,
        
        /// <remarks/>
        enRoute,
        
        /// <remarks/>
        JCB,
        
        /// <remarks/>
        Bank_Card,
        
        /// <remarks/>
        Gift_Card,
        
        /// <remarks/>
        On_Us_Card,
        
        /// <remarks/>
        Payroll_Card,
        
        /// <remarks/>
        Pay_Pal,
        
        /// <remarks/>
        Cash,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://ssl.selectpayment.com/PV")]
    public enum WSPaymentOrigin {
        
        /// <remarks/>
        Internet,
        
        /// <remarks/>
        Telephone_IVR,
        
        /// <remarks/>
        Telephone_Operator,
        
        /// <remarks/>
        Mailed_In,
        
        /// <remarks/>
        Drop_Box,
        
        /// <remarks/>
        Signature_Faxed,
        
        /// <remarks/>
        Signature_Original,
        
        /// <remarks/>
        Bounced_Check,
        
        /// <remarks/>
        Back_Office,
        
        /// <remarks/>
        Retail__POS,
        
        /// <remarks/>
        @__NONE,
        
        /// <remarks/>
        Represented_Check,
        
        /// <remarks/>
        Corporate_Trade_Exchange,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://ssl.selectpayment.com/PV")]
    public enum WSSettlementStatus {
        
        /// <remarks/>
        No_Settlement_Needed,
        
        /// <remarks/>
        To_Be_Originated,
        
        /// <remarks/>
        Originating,
        
        /// <remarks/>
        Originated_Settlement_Pending,
        
        /// <remarks/>
        Settling,
        
        /// <remarks/>
        Settled,
        
        /// <remarks/>
        Charged_Back,
        
        /// <remarks/>
        @__NONE,
        
        /// <remarks/>
        Originated_SDACH,
        
        /// <remarks/>
        Settled_SDACH,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://ssl.selectpayment.com/PV")]
    public enum WSAuthResponseCode {
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Account_Validated,
        
        /// <remarks/>
        Funds_Available,
        
        /// <remarks/>
        Duplicate_Transaction,
        
        /// <remarks/>
        Declined,
        
        /// <remarks/>
        Data_Not_Valid,
        
        /// <remarks/>
        NSF,
        
        /// <remarks/>
        Uncollected,
        
        /// <remarks/>
        Fraud_Multiple,
        
        /// <remarks/>
        Fraud_Single,
        
        /// <remarks/>
        Stop_Payment,
        
        /// <remarks/>
        Non_Participant,
        
        /// <remarks/>
        Velocity_Count,
        
        /// <remarks/>
        Velocity_Amount,
        
        /// <remarks/>
        Law_Prohibits,
        
        /// <remarks/>
        Customer_Opt_Out_All,
        
        /// <remarks/>
        Customer_Opt_Out_Conversion,
        
        /// <remarks/>
        Merchant_Opt_Out_Customer,
        
        /// <remarks/>
        AVS_Declined,
        
        /// <remarks/>
        CCVS_Declined,
        
        /// <remarks/>
        Expired,
        
        /// <remarks/>
        Authorizer_Supressed_Data,
        
        /// <remarks/>
        Account_Closed,
        
        /// <remarks/>
        Account_Invalid,
        
        /// <remarks/>
        Account_Not_ACHable,
        
        /// <remarks/>
        Account_Holder_Deceased,
        
        /// <remarks/>
        Account_Frozen,
        
        /// <remarks/>
        Account_Not_DDA,
        
        /// <remarks/>
        Account_Invalid_Routing,
        
        /// <remarks/>
        Account_New,
        
        /// <remarks/>
        Account_Unknown,
        
        /// <remarks/>
        Account_No_Debits,
        
        /// <remarks/>
        Manager_Approval_Required,
        
        /// <remarks/>
        Processor_Approval_Required,
        
        /// <remarks/>
        Error_Invalid_Format,
        
        /// <remarks/>
        Error_Timeout,
        
        /// <remarks/>
        Error_Internal,
        
        /// <remarks/>
        Error_Connection,
        
        /// <remarks/>
        Error_Not_Supported,
        
        /// <remarks/>
        Error_Not_Subscribed,
        
        /// <remarks/>
        Error_Batch_Closed,
        
        /// <remarks/>
        Error_Invalid_Batch,
        
        /// <remarks/>
        Error_Invalid_Terminal,
        
        /// <remarks/>
        Error_Transaction_Not_Found,
        
        /// <remarks/>
        Error_Terminal_Disabled,
        
        /// <remarks/>
        Error_Invalid_State,
        
        /// <remarks/>
        Error_Unspecified,
        
        /// <remarks/>
        @__NONE,
        
        /// <remarks/>
        Error_MaxData_Exceeded,
        
        /// <remarks/>
        @__ERROR_BEGIN,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://ssl.selectpayment.com/PV")]
    public enum WSOperationType {
        
        /// <remarks/>
        Sale,
        
        /// <remarks/>
        Auth,
        
        /// <remarks/>
        Auth_Only,
        
        /// <remarks/>
        Credit,
        
        /// <remarks/>
        @__NONE,
        
        /// <remarks/>
        Refund,
        
        /// <remarks/>
        SDCredit,
        
        /// <remarks/>
        SDSale,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://ssl.selectpayment.com/PV")]
    public enum WSReportDateType {
        
        /// <remarks/>
        @__NONE,
        
        /// <remarks/>
        Transactions_Created,
        
        /// <remarks/>
        Effective_Dates,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WSEventReport))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WSEventWithTransactionDetailReport))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://ssl.selectpayment.com/PV")]
    public partial class WSTransactionReport : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string transactionStatusField;
        
        private string paymentTypeField;
        
        private string nameOnAccountField;
        
        private string transactionNumberField;
        
        private string referenceNumberField;
        
        private string customerNumberField;
        
        private string operationTypeField;
        
        private string locationNameField;
        
        private System.DateTime transactionDateTimeField;
        
        private decimal totalAmountField;
        
        private string authResponseField;
        
        private string paymentOriginField;
        
        private string settlementStatusField;
        
        private string accountNumberField;
        
        private string checkNumberField;
        
        private string customerField1Field;
        
        private string customerField2Field;
        
        private string customerField3Field;
        
        private string transactionField1Field;
        
        private string transactionField2Field;
        
        private string transactionField3Field;
        
        private string thirdPartyReferenceNumberField;
        
        private string auditUserNameField;
        
        private string ownerApplicationField;
        
        private string receivingApplicationField;
        
        private long ownerAppReferenceIdField;
        
        private string returnCodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string TransactionStatus {
            get {
                return this.transactionStatusField;
            }
            set {
                this.transactionStatusField = value;
                this.RaisePropertyChanged("TransactionStatus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string PaymentType {
            get {
                return this.paymentTypeField;
            }
            set {
                this.paymentTypeField = value;
                this.RaisePropertyChanged("PaymentType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string NameOnAccount {
            get {
                return this.nameOnAccountField;
            }
            set {
                this.nameOnAccountField = value;
                this.RaisePropertyChanged("NameOnAccount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string TransactionNumber {
            get {
                return this.transactionNumberField;
            }
            set {
                this.transactionNumberField = value;
                this.RaisePropertyChanged("TransactionNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string ReferenceNumber {
            get {
                return this.referenceNumberField;
            }
            set {
                this.referenceNumberField = value;
                this.RaisePropertyChanged("ReferenceNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string CustomerNumber {
            get {
                return this.customerNumberField;
            }
            set {
                this.customerNumberField = value;
                this.RaisePropertyChanged("CustomerNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string OperationType {
            get {
                return this.operationTypeField;
            }
            set {
                this.operationTypeField = value;
                this.RaisePropertyChanged("OperationType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string LocationName {
            get {
                return this.locationNameField;
            }
            set {
                this.locationNameField = value;
                this.RaisePropertyChanged("LocationName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public System.DateTime TransactionDateTime {
            get {
                return this.transactionDateTimeField;
            }
            set {
                this.transactionDateTimeField = value;
                this.RaisePropertyChanged("TransactionDateTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public decimal TotalAmount {
            get {
                return this.totalAmountField;
            }
            set {
                this.totalAmountField = value;
                this.RaisePropertyChanged("TotalAmount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string AuthResponse {
            get {
                return this.authResponseField;
            }
            set {
                this.authResponseField = value;
                this.RaisePropertyChanged("AuthResponse");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string PaymentOrigin {
            get {
                return this.paymentOriginField;
            }
            set {
                this.paymentOriginField = value;
                this.RaisePropertyChanged("PaymentOrigin");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string SettlementStatus {
            get {
                return this.settlementStatusField;
            }
            set {
                this.settlementStatusField = value;
                this.RaisePropertyChanged("SettlementStatus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public string AccountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
                this.RaisePropertyChanged("AccountNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public string CheckNumber {
            get {
                return this.checkNumberField;
            }
            set {
                this.checkNumberField = value;
                this.RaisePropertyChanged("CheckNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public string CustomerField1 {
            get {
                return this.customerField1Field;
            }
            set {
                this.customerField1Field = value;
                this.RaisePropertyChanged("CustomerField1");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=16)]
        public string CustomerField2 {
            get {
                return this.customerField2Field;
            }
            set {
                this.customerField2Field = value;
                this.RaisePropertyChanged("CustomerField2");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=17)]
        public string CustomerField3 {
            get {
                return this.customerField3Field;
            }
            set {
                this.customerField3Field = value;
                this.RaisePropertyChanged("CustomerField3");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=18)]
        public string TransactionField1 {
            get {
                return this.transactionField1Field;
            }
            set {
                this.transactionField1Field = value;
                this.RaisePropertyChanged("TransactionField1");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=19)]
        public string TransactionField2 {
            get {
                return this.transactionField2Field;
            }
            set {
                this.transactionField2Field = value;
                this.RaisePropertyChanged("TransactionField2");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=20)]
        public string TransactionField3 {
            get {
                return this.transactionField3Field;
            }
            set {
                this.transactionField3Field = value;
                this.RaisePropertyChanged("TransactionField3");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=21)]
        public string ThirdPartyReferenceNumber {
            get {
                return this.thirdPartyReferenceNumberField;
            }
            set {
                this.thirdPartyReferenceNumberField = value;
                this.RaisePropertyChanged("ThirdPartyReferenceNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=22)]
        public string AuditUserName {
            get {
                return this.auditUserNameField;
            }
            set {
                this.auditUserNameField = value;
                this.RaisePropertyChanged("AuditUserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=23)]
        public string OwnerApplication {
            get {
                return this.ownerApplicationField;
            }
            set {
                this.ownerApplicationField = value;
                this.RaisePropertyChanged("OwnerApplication");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=24)]
        public string ReceivingApplication {
            get {
                return this.receivingApplicationField;
            }
            set {
                this.receivingApplicationField = value;
                this.RaisePropertyChanged("ReceivingApplication");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=25)]
        public long OwnerAppReferenceId {
            get {
                return this.ownerAppReferenceIdField;
            }
            set {
                this.ownerAppReferenceIdField = value;
                this.RaisePropertyChanged("OwnerAppReferenceId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=26)]
        public string ReturnCode {
            get {
                return this.returnCodeField;
            }
            set {
                this.returnCodeField = value;
                this.RaisePropertyChanged("ReturnCode");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://ssl.selectpayment.com/PV")]
    public partial class WSCollectionAttempt : object, System.ComponentModel.INotifyPropertyChanged {
        
        private byte attemptField;
        
        private string collectionStatusField;
        
        private string originallyScheduledField;
        
        private string referenceNumberField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public byte Attempt {
            get {
                return this.attemptField;
            }
            set {
                this.attemptField = value;
                this.RaisePropertyChanged("Attempt");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string CollectionStatus {
            get {
                return this.collectionStatusField;
            }
            set {
                this.collectionStatusField = value;
                this.RaisePropertyChanged("CollectionStatus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string OriginallyScheduled {
            get {
                return this.originallyScheduledField;
            }
            set {
                this.originallyScheduledField = value;
                this.RaisePropertyChanged("OriginallyScheduled");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string ReferenceNumber {
            get {
                return this.referenceNumberField;
            }
            set {
                this.referenceNumberField = value;
                this.RaisePropertyChanged("ReferenceNumber");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://ssl.selectpayment.com/PV")]
    public partial class WSCollectionItem : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string collectionItemTypeField;
        
        private string amountField;
        
        private string statusField;
        
        private byte currentAttemptField;
        
        private byte attemptsRemainingField;
        
        private WSCollectionAttempt[] wsCollectionAttemptsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string CollectionItemType {
            get {
                return this.collectionItemTypeField;
            }
            set {
                this.collectionItemTypeField = value;
                this.RaisePropertyChanged("CollectionItemType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
                this.RaisePropertyChanged("Amount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public byte CurrentAttempt {
            get {
                return this.currentAttemptField;
            }
            set {
                this.currentAttemptField = value;
                this.RaisePropertyChanged("CurrentAttempt");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public byte AttemptsRemaining {
            get {
                return this.attemptsRemainingField;
            }
            set {
                this.attemptsRemainingField = value;
                this.RaisePropertyChanged("AttemptsRemaining");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=5)]
        public WSCollectionAttempt[] WsCollectionAttempts {
            get {
                return this.wsCollectionAttemptsField;
            }
            set {
                this.wsCollectionAttemptsField = value;
                this.RaisePropertyChanged("WsCollectionAttempts");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://ssl.selectpayment.com/PV")]
    public partial class WSCollectionDetail : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string returnDateField;
        
        private string collectionAmountField;
        
        private string referenceNumberField;
        
        private string transactionNumberField;
        
        private string originalAmountField;
        
        private string nameOnAccountField;
        
        private string effectiveDateField;
        
        private string field1Field;
        
        private string field2Field;
        
        private string field3Field;
        
        private WSCollectionItem[] wsCollectionItemsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ReturnDate {
            get {
                return this.returnDateField;
            }
            set {
                this.returnDateField = value;
                this.RaisePropertyChanged("ReturnDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string CollectionAmount {
            get {
                return this.collectionAmountField;
            }
            set {
                this.collectionAmountField = value;
                this.RaisePropertyChanged("CollectionAmount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string ReferenceNumber {
            get {
                return this.referenceNumberField;
            }
            set {
                this.referenceNumberField = value;
                this.RaisePropertyChanged("ReferenceNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string TransactionNumber {
            get {
                return this.transactionNumberField;
            }
            set {
                this.transactionNumberField = value;
                this.RaisePropertyChanged("TransactionNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string OriginalAmount {
            get {
                return this.originalAmountField;
            }
            set {
                this.originalAmountField = value;
                this.RaisePropertyChanged("OriginalAmount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string NameOnAccount {
            get {
                return this.nameOnAccountField;
            }
            set {
                this.nameOnAccountField = value;
                this.RaisePropertyChanged("NameOnAccount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string EffectiveDate {
            get {
                return this.effectiveDateField;
            }
            set {
                this.effectiveDateField = value;
                this.RaisePropertyChanged("EffectiveDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string Field1 {
            get {
                return this.field1Field;
            }
            set {
                this.field1Field = value;
                this.RaisePropertyChanged("Field1");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string Field2 {
            get {
                return this.field2Field;
            }
            set {
                this.field2Field = value;
                this.RaisePropertyChanged("Field2");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string Field3 {
            get {
                return this.field3Field;
            }
            set {
                this.field3Field = value;
                this.RaisePropertyChanged("Field3");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=10)]
        public WSCollectionItem[] WsCollectionItems {
            get {
                return this.wsCollectionItemsField;
            }
            set {
                this.wsCollectionItemsField = value;
                this.RaisePropertyChanged("WsCollectionItems");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://ssl.selectpayment.com/PV")]
    public partial class WSCollection : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long collectionIdField;
        
        private string locationField;
        
        private string returnDateField;
        
        private string nameOnAccountField;
        
        private string transactionNumberField;
        
        private string field1Field;
        
        private string field2Field;
        
        private string field3Field;
        
        private string referenceNumberField;
        
        private string faceAmountField;
        
        private string collectionAmountField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long CollectionId {
            get {
                return this.collectionIdField;
            }
            set {
                this.collectionIdField = value;
                this.RaisePropertyChanged("CollectionId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
                this.RaisePropertyChanged("Location");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string ReturnDate {
            get {
                return this.returnDateField;
            }
            set {
                this.returnDateField = value;
                this.RaisePropertyChanged("ReturnDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string NameOnAccount {
            get {
                return this.nameOnAccountField;
            }
            set {
                this.nameOnAccountField = value;
                this.RaisePropertyChanged("NameOnAccount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string TransactionNumber {
            get {
                return this.transactionNumberField;
            }
            set {
                this.transactionNumberField = value;
                this.RaisePropertyChanged("TransactionNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string Field1 {
            get {
                return this.field1Field;
            }
            set {
                this.field1Field = value;
                this.RaisePropertyChanged("Field1");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string Field2 {
            get {
                return this.field2Field;
            }
            set {
                this.field2Field = value;
                this.RaisePropertyChanged("Field2");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string Field3 {
            get {
                return this.field3Field;
            }
            set {
                this.field3Field = value;
                this.RaisePropertyChanged("Field3");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string ReferenceNumber {
            get {
                return this.referenceNumberField;
            }
            set {
                this.referenceNumberField = value;
                this.RaisePropertyChanged("ReferenceNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string FaceAmount {
            get {
                return this.faceAmountField;
            }
            set {
                this.faceAmountField = value;
                this.RaisePropertyChanged("FaceAmount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string CollectionAmount {
            get {
                return this.collectionAmountField;
            }
            set {
                this.collectionAmountField = value;
                this.RaisePropertyChanged("CollectionAmount");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://ssl.selectpayment.com/PV")]
    public partial class WSCollectionSetting : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string processingSystemField;
        
        private string locationField;
        
        private string collectionSettingsNameField;
        
        private bool enabledField;
        
        private byte principalAttemptsField;
        
        private string timeFinalPresentmentField;
        
        private string feeAttemptsField;
        
        private string stateFeeOverrideAmountField;
        
        private string minDaysFirstPresentmentField;
        
        private string minDaysLastPresentmentField;
        
        private string manualRepresentmentField;
        
        private byte daysBeforeClearField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ProcessingSystem {
            get {
                return this.processingSystemField;
            }
            set {
                this.processingSystemField = value;
                this.RaisePropertyChanged("ProcessingSystem");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
                this.RaisePropertyChanged("Location");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string CollectionSettingsName {
            get {
                return this.collectionSettingsNameField;
            }
            set {
                this.collectionSettingsNameField = value;
                this.RaisePropertyChanged("CollectionSettingsName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool Enabled {
            get {
                return this.enabledField;
            }
            set {
                this.enabledField = value;
                this.RaisePropertyChanged("Enabled");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public byte PrincipalAttempts {
            get {
                return this.principalAttemptsField;
            }
            set {
                this.principalAttemptsField = value;
                this.RaisePropertyChanged("PrincipalAttempts");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string TimeFinalPresentment {
            get {
                return this.timeFinalPresentmentField;
            }
            set {
                this.timeFinalPresentmentField = value;
                this.RaisePropertyChanged("TimeFinalPresentment");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string FeeAttempts {
            get {
                return this.feeAttemptsField;
            }
            set {
                this.feeAttemptsField = value;
                this.RaisePropertyChanged("FeeAttempts");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string StateFeeOverrideAmount {
            get {
                return this.stateFeeOverrideAmountField;
            }
            set {
                this.stateFeeOverrideAmountField = value;
                this.RaisePropertyChanged("StateFeeOverrideAmount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string MinDaysFirstPresentment {
            get {
                return this.minDaysFirstPresentmentField;
            }
            set {
                this.minDaysFirstPresentmentField = value;
                this.RaisePropertyChanged("MinDaysFirstPresentment");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string MinDaysLastPresentment {
            get {
                return this.minDaysLastPresentmentField;
            }
            set {
                this.minDaysLastPresentmentField = value;
                this.RaisePropertyChanged("MinDaysLastPresentment");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string ManualRepresentment {
            get {
                return this.manualRepresentmentField;
            }
            set {
                this.manualRepresentmentField = value;
                this.RaisePropertyChanged("ManualRepresentment");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public byte DaysBeforeClear {
            get {
                return this.daysBeforeClearField;
            }
            set {
                this.daysBeforeClearField = value;
                this.RaisePropertyChanged("DaysBeforeClear");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://ssl.selectpayment.com/PV")]
    public partial class WSTransactionDetail : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int entityIdField;
        
        private int locationIdField;
        
        private string customerNumberField;
        
        private WSPaymentOrigin paymentOriginField;
        
        private WSAccountType accountTypeField;
        
        private WSReportOperationType operationTypeField;
        
        private WSReportTransactionStatus transactionStatusField;
        
        private WSSettlementStatus settlementStatusField;
        
        private System.DateTime effectiveDateField;
        
        private System.DateTime transactionDateField;
        
        private string descriptionField;
        
        private string sourceApplicationField;
        
        private WSReportSettlementType originatingAsField;
        
        private WSAuthResponseCode authResponseField;
        
        private decimal totalAmountField;
        
        private string referenceNumberField;
        
        private string transactionNumberField;
        
        private string field1Field;
        
        private string field2Field;
        
        private string field3Field;
        
        private string displayAccountNumberField;
        
        private string emailAddressField;
        
        private WSNotificationMethod notificationMethodField;
        
        private WSFaceFeeType faceFeeTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int EntityId {
            get {
                return this.entityIdField;
            }
            set {
                this.entityIdField = value;
                this.RaisePropertyChanged("EntityId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int LocationId {
            get {
                return this.locationIdField;
            }
            set {
                this.locationIdField = value;
                this.RaisePropertyChanged("LocationId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string CustomerNumber {
            get {
                return this.customerNumberField;
            }
            set {
                this.customerNumberField = value;
                this.RaisePropertyChanged("CustomerNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public WSPaymentOrigin PaymentOrigin {
            get {
                return this.paymentOriginField;
            }
            set {
                this.paymentOriginField = value;
                this.RaisePropertyChanged("PaymentOrigin");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public WSAccountType AccountType {
            get {
                return this.accountTypeField;
            }
            set {
                this.accountTypeField = value;
                this.RaisePropertyChanged("AccountType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public WSReportOperationType OperationType {
            get {
                return this.operationTypeField;
            }
            set {
                this.operationTypeField = value;
                this.RaisePropertyChanged("OperationType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public WSReportTransactionStatus TransactionStatus {
            get {
                return this.transactionStatusField;
            }
            set {
                this.transactionStatusField = value;
                this.RaisePropertyChanged("TransactionStatus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public WSSettlementStatus SettlementStatus {
            get {
                return this.settlementStatusField;
            }
            set {
                this.settlementStatusField = value;
                this.RaisePropertyChanged("SettlementStatus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public System.DateTime EffectiveDate {
            get {
                return this.effectiveDateField;
            }
            set {
                this.effectiveDateField = value;
                this.RaisePropertyChanged("EffectiveDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public System.DateTime TransactionDate {
            get {
                return this.transactionDateField;
            }
            set {
                this.transactionDateField = value;
                this.RaisePropertyChanged("TransactionDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string SourceApplication {
            get {
                return this.sourceApplicationField;
            }
            set {
                this.sourceApplicationField = value;
                this.RaisePropertyChanged("SourceApplication");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public WSReportSettlementType OriginatingAs {
            get {
                return this.originatingAsField;
            }
            set {
                this.originatingAsField = value;
                this.RaisePropertyChanged("OriginatingAs");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public WSAuthResponseCode AuthResponse {
            get {
                return this.authResponseField;
            }
            set {
                this.authResponseField = value;
                this.RaisePropertyChanged("AuthResponse");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public decimal TotalAmount {
            get {
                return this.totalAmountField;
            }
            set {
                this.totalAmountField = value;
                this.RaisePropertyChanged("TotalAmount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public string ReferenceNumber {
            get {
                return this.referenceNumberField;
            }
            set {
                this.referenceNumberField = value;
                this.RaisePropertyChanged("ReferenceNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=16)]
        public string TransactionNumber {
            get {
                return this.transactionNumberField;
            }
            set {
                this.transactionNumberField = value;
                this.RaisePropertyChanged("TransactionNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=17)]
        public string Field1 {
            get {
                return this.field1Field;
            }
            set {
                this.field1Field = value;
                this.RaisePropertyChanged("Field1");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=18)]
        public string Field2 {
            get {
                return this.field2Field;
            }
            set {
                this.field2Field = value;
                this.RaisePropertyChanged("Field2");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=19)]
        public string Field3 {
            get {
                return this.field3Field;
            }
            set {
                this.field3Field = value;
                this.RaisePropertyChanged("Field3");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=20)]
        public string DisplayAccountNumber {
            get {
                return this.displayAccountNumberField;
            }
            set {
                this.displayAccountNumberField = value;
                this.RaisePropertyChanged("DisplayAccountNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=21)]
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
                this.RaisePropertyChanged("EmailAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=22)]
        public WSNotificationMethod NotificationMethod {
            get {
                return this.notificationMethodField;
            }
            set {
                this.notificationMethodField = value;
                this.RaisePropertyChanged("NotificationMethod");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=23)]
        public WSFaceFeeType FaceFeeType {
            get {
                return this.faceFeeTypeField;
            }
            set {
                this.faceFeeTypeField = value;
                this.RaisePropertyChanged("FaceFeeType");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://ssl.selectpayment.com/PV")]
    public enum WSAccountType {
        
        /// <remarks/>
        Checking,
        
        /// <remarks/>
        Savings,
        
        /// <remarks/>
        Treasury_Check,
        
        /// <remarks/>
        Money_Order,
        
        /// <remarks/>
        Travelers_Check,
        
        /// <remarks/>
        Convenience_Check,
        
        /// <remarks/>
        Visa,
        
        /// <remarks/>
        MasterCard,
        
        /// <remarks/>
        Discover__Novus,
        
        /// <remarks/>
        American_Express,
        
        /// <remarks/>
        Diners__Carte_Blanche,
        
        /// <remarks/>
        enRoute,
        
        /// <remarks/>
        JCB,
        
        /// <remarks/>
        Bank_Card,
        
        /// <remarks/>
        Gift_Card,
        
        /// <remarks/>
        On_Us_Card,
        
        /// <remarks/>
        Payroll_Card,
        
        /// <remarks/>
        Cashiers_Check,
        
        /// <remarks/>
        @__NONE,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://ssl.selectpayment.com/PV")]
    public enum WSReportOperationType {
        
        /// <remarks/>
        Sale,
        
        /// <remarks/>
        Auth,
        
        /// <remarks/>
        Auth_Only,
        
        /// <remarks/>
        Credit,
        
        /// <remarks/>
        ACH_Eligible,
        
        /// <remarks/>
        Capture,
        
        /// <remarks/>
        Void,
        
        /// <remarks/>
        Refund,
        
        /// <remarks/>
        Force,
        
        /// <remarks/>
        Reversal,
        
        /// <remarks/>
        Resolve,
        
        /// <remarks/>
        Edit,
        
        /// <remarks/>
        Batch_Close,
        
        /// <remarks/>
        Batch_Reconcile,
        
        /// <remarks/>
        @__NONE,
        
        /// <remarks/>
        SDCredit,
        
        /// <remarks/>
        SDSale,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://ssl.selectpayment.com/PV")]
    public enum WSReportTransactionStatus {
        
        /// <remarks/>
        Declined,
        
        /// <remarks/>
        Approved,
        
        /// <remarks/>
        Error,
        
        /// <remarks/>
        Voided,
        
        /// <remarks/>
        @__Queued,
        
        /// <remarks/>
        @__Batched,
        
        /// <remarks/>
        Processed,
        
        /// <remarks/>
        Collected,
        
        /// <remarks/>
        Awaiting_Capture,
        
        /// <remarks/>
        Awaiting_Approval,
        
        /// <remarks/>
        Suspended,
        
        /// <remarks/>
        In_Collection,
        
        /// <remarks/>
        In_Research,
        
        /// <remarks/>
        @__CHARGEBACKS,
        
        /// <remarks/>
        Disputed,
        
        /// <remarks/>
        Uncollected_NSF,
        
        /// <remarks/>
        Invalid__Closed_Account,
        
        /// <remarks/>
        Resolved,
        
        /// <remarks/>
        Other_Check21_Returns,
        
        /// <remarks/>
        @__NONE,
        
        /// <remarks/>
        Unauthorized,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://ssl.selectpayment.com/PV")]
    public enum WSReportSettlementType {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        ACH,
        
        /// <remarks/>
        Paper_Draft,
        
        /// <remarks/>
        Image_Replacement_Document,
        
        /// <remarks/>
        Wire_Transfer,
        
        /// <remarks/>
        Card_Transfer,
        
        /// <remarks/>
        Image_Exchange,
        
        /// <remarks/>
        Third_Party,
        
        /// <remarks/>
        @__NONE,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://ssl.selectpayment.com/PV")]
    public enum WSNotificationMethod {
        
        /// <remarks/>
        Merchant_Notify,
        
        /// <remarks/>
        Merchant_Recording,
        
        /// <remarks/>
        Postcard,
        
        /// <remarks/>
        Email,
        
        /// <remarks/>
        Fax,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://ssl.selectpayment.com/PV")]
    public enum WSFaceFeeType {
        
        /// <remarks/>
        @__None,
        
        /// <remarks/>
        Face,
        
        /// <remarks/>
        Bill_Convenience_Face,
        
        /// <remarks/>
        Custom1,
        
        /// <remarks/>
        Custom2,
        
        /// <remarks/>
        Custom3,
        
        /// <remarks/>
        NSF_Fee,
        
        /// <remarks/>
        Convenience_Fee,
        
        /// <remarks/>
        Late_Fee,
        
        /// <remarks/>
        Bill_Convenience_Fee,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://ssl.selectpayment.com/PV")]
    public partial class WSSettlementBatch : object, System.ComponentModel.INotifyPropertyChanged {
        
        private WSReportEntryType entryTypeField;
        
        private string batchDescriptionField;
        
        private string reasonField;
        
        private decimal amountField;
        
        private WSTransactionDetail transactionDetailsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public WSReportEntryType EntryType {
            get {
                return this.entryTypeField;
            }
            set {
                this.entryTypeField = value;
                this.RaisePropertyChanged("EntryType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string BatchDescription {
            get {
                return this.batchDescriptionField;
            }
            set {
                this.batchDescriptionField = value;
                this.RaisePropertyChanged("BatchDescription");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Reason {
            get {
                return this.reasonField;
            }
            set {
                this.reasonField = value;
                this.RaisePropertyChanged("Reason");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public decimal Amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
                this.RaisePropertyChanged("Amount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public WSTransactionDetail transactionDetails {
            get {
                return this.transactionDetailsField;
            }
            set {
                this.transactionDetailsField = value;
                this.RaisePropertyChanged("transactionDetails");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://ssl.selectpayment.com/PV")]
    public enum WSReportEntryType {
        
        /// <remarks/>
        Sale,
        
        /// <remarks/>
        Refund,
        
        /// <remarks/>
        Reserve,
        
        /// <remarks/>
        Discount_Rate,
        
        /// <remarks/>
        Billing,
        
        /// <remarks/>
        Adjustment,
        
        /// <remarks/>
        Return,
        
        /// <remarks/>
        Sweep,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://ssl.selectpayment.com/PV")]
    public partial class WSCreditDebitReport : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string batchStatusField;
        
        private System.DateTime effectiveDateField;
        
        private long batchIdField;
        
        private string descriptionField;
        
        private decimal amountField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string BatchStatus {
            get {
                return this.batchStatusField;
            }
            set {
                this.batchStatusField = value;
                this.RaisePropertyChanged("BatchStatus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public System.DateTime EffectiveDate {
            get {
                return this.effectiveDateField;
            }
            set {
                this.effectiveDateField = value;
                this.RaisePropertyChanged("EffectiveDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long BatchId {
            get {
                return this.batchIdField;
            }
            set {
                this.batchIdField = value;
                this.RaisePropertyChanged("BatchId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public decimal Amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
                this.RaisePropertyChanged("Amount");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WSEventWithTransactionDetailReport))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://ssl.selectpayment.com/PV")]
    public partial class WSEventReport : WSTransactionReport {
        
        private System.DateTime eventDateTimeField;
        
        private string eventTypeField;
        
        private string eventDatastringField;
        
        private string noticeOfChangeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public System.DateTime EventDateTime {
            get {
                return this.eventDateTimeField;
            }
            set {
                this.eventDateTimeField = value;
                this.RaisePropertyChanged("EventDateTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string EventType {
            get {
                return this.eventTypeField;
            }
            set {
                this.eventTypeField = value;
                this.RaisePropertyChanged("EventType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string EventDatastring {
            get {
                return this.eventDatastringField;
            }
            set {
                this.eventDatastringField = value;
                this.RaisePropertyChanged("EventDatastring");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string NoticeOfChange {
            get {
                return this.noticeOfChangeField;
            }
            set {
                this.noticeOfChangeField = value;
                this.RaisePropertyChanged("NoticeOfChange");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://ssl.selectpayment.com/PV")]
    public partial class WSEventWithTransactionDetailReport : WSEventReport {
        
        private string sequenceIdField;
        
        private string batchNumberField;
        
        private string originatedAsField;
        
        private string isDuplicateField;
        
        private System.DateTime effectiveDateField;
        
        private string faceFeeTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string SequenceId {
            get {
                return this.sequenceIdField;
            }
            set {
                this.sequenceIdField = value;
                this.RaisePropertyChanged("SequenceId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string BatchNumber {
            get {
                return this.batchNumberField;
            }
            set {
                this.batchNumberField = value;
                this.RaisePropertyChanged("BatchNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string OriginatedAs {
            get {
                return this.originatedAsField;
            }
            set {
                this.originatedAsField = value;
                this.RaisePropertyChanged("OriginatedAs");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string IsDuplicate {
            get {
                return this.isDuplicateField;
            }
            set {
                this.isDuplicateField = value;
                this.RaisePropertyChanged("IsDuplicate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public System.DateTime EffectiveDate {
            get {
                return this.effectiveDateField;
            }
            set {
                this.effectiveDateField = value;
                this.RaisePropertyChanged("EffectiveDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string FaceFeeType {
            get {
                return this.faceFeeTypeField;
            }
            set {
                this.faceFeeTypeField = value;
                this.RaisePropertyChanged("FaceFeeType");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://ssl.selectpayment.com/PV")]
    public enum WSTransactionEvent {
        
        /// <remarks/>
        Declined,
        
        /// <remarks/>
        Approved,
        
        /// <remarks/>
        Processing_Error,
        
        /// <remarks/>
        Voided,
        
        /// <remarks/>
        Captured,
        
        /// <remarks/>
        Refunded,
        
        /// <remarks/>
        Reversed,
        
        /// <remarks/>
        Edited,
        
        /// <remarks/>
        Processed,
        
        /// <remarks/>
        Cleared,
        
        /// <remarks/>
        Collected,
        
        /// <remarks/>
        Collection_Failed,
        
        /// <remarks/>
        Originated,
        
        /// <remarks/>
        Settled,
        
        /// <remarks/>
        Represented,
        
        /// <remarks/>
        Held_For_Approval,
        
        /// <remarks/>
        Suspended,
        
        /// <remarks/>
        Sent_To_Collection,
        
        /// <remarks/>
        Research_Complete,
        
        /// <remarks/>
        Research_Failed,
        
        /// <remarks/>
        Disputed,
        
        /// <remarks/>
        Returned_NSF,
        
        /// <remarks/>
        Returned_Bad_Account,
        
        /// <remarks/>
        Other_Check21_Returns,
        
        /// <remarks/>
        @__NONE,
        
        /// <remarks/>
        Notice_Of_Change,
        
        /// <remarks/>
        Resolved,
        
        /// <remarks/>
        Unauthorized,
        
        /// <remarks/>
        Originated_SDACH,
        
        /// <remarks/>
        Settled_SDACH,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface TransactionReportingSoapChannel : ACHProcessor.TrsansactionReportingService.TransactionReportingSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TransactionReportingSoapClient : System.ServiceModel.ClientBase<ACHProcessor.TrsansactionReportingService.TransactionReportingSoap>, ACHProcessor.TrsansactionReportingService.TransactionReportingSoap {
        
        public TransactionReportingSoapClient() {
        }
        
        public TransactionReportingSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TransactionReportingSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TransactionReportingSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TransactionReportingSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet TransactionReport(
                    long storeId, 
                    string storeKey, 
                    int entityId, 
                    ACHProcessor.TrsansactionReportingService.WSDisplayFields[] wsdisplayFields, 
                    int[] locationIds, 
                    ACHProcessor.TrsansactionReportingService.WSTransactionStatus[] wstransStatus, 
                    ACHProcessor.TrsansactionReportingService.WSSettlementType[] wssettlementType, 
                    ACHProcessor.TrsansactionReportingService.WSPaymentType wspaymentType, 
                    ACHProcessor.TrsansactionReportingService.WSPaymentOrigin[] wspaymentOrigin, 
                    ACHProcessor.TrsansactionReportingService.WSSettlementStatus[] wssettlementStatus, 
                    ACHProcessor.TrsansactionReportingService.WSAuthResponseCode wsauthResponseCode, 
                    ACHProcessor.TrsansactionReportingService.WSOperationType wsopType, 
                    System.DateTime beginTransDate, 
                    System.DateTime endTransDate, 
                    ACHProcessor.TrsansactionReportingService.WSReportDateType wsdateType, 
                    string fromAmount, 
                    string toAmount) {
            return base.Channel.TransactionReport(storeId, storeKey, entityId, wsdisplayFields, locationIds, wstransStatus, wssettlementType, wspaymentType, wspaymentOrigin, wssettlementStatus, wsauthResponseCode, wsopType, beginTransDate, endTransDate, wsdateType, fromAmount, toAmount);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> TransactionReportAsync(
                    long storeId, 
                    string storeKey, 
                    int entityId, 
                    ACHProcessor.TrsansactionReportingService.WSDisplayFields[] wsdisplayFields, 
                    int[] locationIds, 
                    ACHProcessor.TrsansactionReportingService.WSTransactionStatus[] wstransStatus, 
                    ACHProcessor.TrsansactionReportingService.WSSettlementType[] wssettlementType, 
                    ACHProcessor.TrsansactionReportingService.WSPaymentType wspaymentType, 
                    ACHProcessor.TrsansactionReportingService.WSPaymentOrigin[] wspaymentOrigin, 
                    ACHProcessor.TrsansactionReportingService.WSSettlementStatus[] wssettlementStatus, 
                    ACHProcessor.TrsansactionReportingService.WSAuthResponseCode wsauthResponseCode, 
                    ACHProcessor.TrsansactionReportingService.WSOperationType wsopType, 
                    System.DateTime beginTransDate, 
                    System.DateTime endTransDate, 
                    ACHProcessor.TrsansactionReportingService.WSReportDateType wsdateType, 
                    string fromAmount, 
                    string toAmount) {
            return base.Channel.TransactionReportAsync(storeId, storeKey, entityId, wsdisplayFields, locationIds, wstransStatus, wssettlementType, wspaymentType, wspaymentOrigin, wssettlementStatus, wsauthResponseCode, wsopType, beginTransDate, endTransDate, wsdateType, fromAmount, toAmount);
        }
        
        public ACHProcessor.TrsansactionReportingService.WSTransactionReport[] GetTransactionReport(
                    long storeId, 
                    string storeKey, 
                    int entityId, 
                    ACHProcessor.TrsansactionReportingService.WSDisplayFields[] wsdisplayFields, 
                    int[] locationIds, 
                    ACHProcessor.TrsansactionReportingService.WSTransactionStatus[] wstransStatus, 
                    ACHProcessor.TrsansactionReportingService.WSSettlementType[] wssettlementType, 
                    ACHProcessor.TrsansactionReportingService.WSPaymentType wspaymentType, 
                    ACHProcessor.TrsansactionReportingService.WSPaymentOrigin[] wspaymentOrigin, 
                    ACHProcessor.TrsansactionReportingService.WSSettlementStatus[] wssettlementStatus, 
                    ACHProcessor.TrsansactionReportingService.WSAuthResponseCode wsauthResponseCode, 
                    ACHProcessor.TrsansactionReportingService.WSOperationType wsopType, 
                    System.DateTime beginTransDate, 
                    System.DateTime endTransDate, 
                    ACHProcessor.TrsansactionReportingService.WSReportDateType wsdateType, 
                    string fromAmount, 
                    string toAmount) {
            return base.Channel.GetTransactionReport(storeId, storeKey, entityId, wsdisplayFields, locationIds, wstransStatus, wssettlementType, wspaymentType, wspaymentOrigin, wssettlementStatus, wsauthResponseCode, wsopType, beginTransDate, endTransDate, wsdateType, fromAmount, toAmount);
        }
        
        public System.Threading.Tasks.Task<ACHProcessor.TrsansactionReportingService.WSTransactionReport[]> GetTransactionReportAsync(
                    long storeId, 
                    string storeKey, 
                    int entityId, 
                    ACHProcessor.TrsansactionReportingService.WSDisplayFields[] wsdisplayFields, 
                    int[] locationIds, 
                    ACHProcessor.TrsansactionReportingService.WSTransactionStatus[] wstransStatus, 
                    ACHProcessor.TrsansactionReportingService.WSSettlementType[] wssettlementType, 
                    ACHProcessor.TrsansactionReportingService.WSPaymentType wspaymentType, 
                    ACHProcessor.TrsansactionReportingService.WSPaymentOrigin[] wspaymentOrigin, 
                    ACHProcessor.TrsansactionReportingService.WSSettlementStatus[] wssettlementStatus, 
                    ACHProcessor.TrsansactionReportingService.WSAuthResponseCode wsauthResponseCode, 
                    ACHProcessor.TrsansactionReportingService.WSOperationType wsopType, 
                    System.DateTime beginTransDate, 
                    System.DateTime endTransDate, 
                    ACHProcessor.TrsansactionReportingService.WSReportDateType wsdateType, 
                    string fromAmount, 
                    string toAmount) {
            return base.Channel.GetTransactionReportAsync(storeId, storeKey, entityId, wsdisplayFields, locationIds, wstransStatus, wssettlementType, wspaymentType, wspaymentOrigin, wssettlementStatus, wsauthResponseCode, wsopType, beginTransDate, endTransDate, wsdateType, fromAmount, toAmount);
        }
        
        public System.Data.DataSet HistoricalEventReport(
                    long storeId, 
                    string storeKey, 
                    int entityId, 
                    ACHProcessor.TrsansactionReportingService.WSDisplayFields[] wsdisplayFields, 
                    int[] locationIds, 
                    ACHProcessor.TrsansactionReportingService.WSTransactionEvent wstransEvent, 
                    ACHProcessor.TrsansactionReportingService.WSTransactionStatus[] wstransStatus, 
                    ACHProcessor.TrsansactionReportingService.WSSettlementType[] wssettlementType, 
                    ACHProcessor.TrsansactionReportingService.WSPaymentType wspaymentType, 
                    ACHProcessor.TrsansactionReportingService.WSPaymentOrigin[] wspaymentOrigin, 
                    ACHProcessor.TrsansactionReportingService.WSSettlementStatus[] wssettlementStatus, 
                    ACHProcessor.TrsansactionReportingService.WSAuthResponseCode wsauthResponseCode, 
                    ACHProcessor.TrsansactionReportingService.WSOperationType wsopType, 
                    System.DateTime beginTransDate, 
                    System.DateTime endTransDate, 
                    string fromAmount, 
                    string toAmount) {
            return base.Channel.HistoricalEventReport(storeId, storeKey, entityId, wsdisplayFields, locationIds, wstransEvent, wstransStatus, wssettlementType, wspaymentType, wspaymentOrigin, wssettlementStatus, wsauthResponseCode, wsopType, beginTransDate, endTransDate, fromAmount, toAmount);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> HistoricalEventReportAsync(
                    long storeId, 
                    string storeKey, 
                    int entityId, 
                    ACHProcessor.TrsansactionReportingService.WSDisplayFields[] wsdisplayFields, 
                    int[] locationIds, 
                    ACHProcessor.TrsansactionReportingService.WSTransactionEvent wstransEvent, 
                    ACHProcessor.TrsansactionReportingService.WSTransactionStatus[] wstransStatus, 
                    ACHProcessor.TrsansactionReportingService.WSSettlementType[] wssettlementType, 
                    ACHProcessor.TrsansactionReportingService.WSPaymentType wspaymentType, 
                    ACHProcessor.TrsansactionReportingService.WSPaymentOrigin[] wspaymentOrigin, 
                    ACHProcessor.TrsansactionReportingService.WSSettlementStatus[] wssettlementStatus, 
                    ACHProcessor.TrsansactionReportingService.WSAuthResponseCode wsauthResponseCode, 
                    ACHProcessor.TrsansactionReportingService.WSOperationType wsopType, 
                    System.DateTime beginTransDate, 
                    System.DateTime endTransDate, 
                    string fromAmount, 
                    string toAmount) {
            return base.Channel.HistoricalEventReportAsync(storeId, storeKey, entityId, wsdisplayFields, locationIds, wstransEvent, wstransStatus, wssettlementType, wspaymentType, wspaymentOrigin, wssettlementStatus, wsauthResponseCode, wsopType, beginTransDate, endTransDate, fromAmount, toAmount);
        }
        
        public ACHProcessor.TrsansactionReportingService.WSEventReport[] GetHistoricalEventReport(
                    long storeId, 
                    string storeKey, 
                    int entityId, 
                    ACHProcessor.TrsansactionReportingService.WSDisplayFields[] wsdisplayFields, 
                    int[] locationIds, 
                    ACHProcessor.TrsansactionReportingService.WSTransactionEvent wstransEvent, 
                    ACHProcessor.TrsansactionReportingService.WSTransactionStatus[] wstransStatus, 
                    ACHProcessor.TrsansactionReportingService.WSSettlementType[] wssettlementType, 
                    ACHProcessor.TrsansactionReportingService.WSPaymentType wspaymentType, 
                    ACHProcessor.TrsansactionReportingService.WSPaymentOrigin[] wspaymentOrigin, 
                    ACHProcessor.TrsansactionReportingService.WSSettlementStatus[] wssettlementStatus, 
                    ACHProcessor.TrsansactionReportingService.WSAuthResponseCode wsauthResponseCode, 
                    ACHProcessor.TrsansactionReportingService.WSOperationType wsopType, 
                    System.DateTime beginTransDate, 
                    System.DateTime endTransDate, 
                    string fromAmount, 
                    string toAmount) {
            return base.Channel.GetHistoricalEventReport(storeId, storeKey, entityId, wsdisplayFields, locationIds, wstransEvent, wstransStatus, wssettlementType, wspaymentType, wspaymentOrigin, wssettlementStatus, wsauthResponseCode, wsopType, beginTransDate, endTransDate, fromAmount, toAmount);
        }
        
        public System.Threading.Tasks.Task<ACHProcessor.TrsansactionReportingService.WSEventReport[]> GetHistoricalEventReportAsync(
                    long storeId, 
                    string storeKey, 
                    int entityId, 
                    ACHProcessor.TrsansactionReportingService.WSDisplayFields[] wsdisplayFields, 
                    int[] locationIds, 
                    ACHProcessor.TrsansactionReportingService.WSTransactionEvent wstransEvent, 
                    ACHProcessor.TrsansactionReportingService.WSTransactionStatus[] wstransStatus, 
                    ACHProcessor.TrsansactionReportingService.WSSettlementType[] wssettlementType, 
                    ACHProcessor.TrsansactionReportingService.WSPaymentType wspaymentType, 
                    ACHProcessor.TrsansactionReportingService.WSPaymentOrigin[] wspaymentOrigin, 
                    ACHProcessor.TrsansactionReportingService.WSSettlementStatus[] wssettlementStatus, 
                    ACHProcessor.TrsansactionReportingService.WSAuthResponseCode wsauthResponseCode, 
                    ACHProcessor.TrsansactionReportingService.WSOperationType wsopType, 
                    System.DateTime beginTransDate, 
                    System.DateTime endTransDate, 
                    string fromAmount, 
                    string toAmount) {
            return base.Channel.GetHistoricalEventReportAsync(storeId, storeKey, entityId, wsdisplayFields, locationIds, wstransEvent, wstransStatus, wssettlementType, wspaymentType, wspaymentOrigin, wssettlementStatus, wsauthResponseCode, wsopType, beginTransDate, endTransDate, fromAmount, toAmount);
        }
        
        public ACHProcessor.TrsansactionReportingService.WSEventWithTransactionDetailReport[] GetHistoricalEventWithTransactionDetailReport(
                    long storeId, 
                    string storeKey, 
                    int entityId, 
                    ACHProcessor.TrsansactionReportingService.WSDisplayFields[] wsdisplayFields, 
                    int[] locationIds, 
                    ACHProcessor.TrsansactionReportingService.WSTransactionEvent wstransEvent, 
                    ACHProcessor.TrsansactionReportingService.WSTransactionStatus[] wstransStatus, 
                    ACHProcessor.TrsansactionReportingService.WSSettlementType[] wssettlementType, 
                    ACHProcessor.TrsansactionReportingService.WSPaymentType wspaymentType, 
                    ACHProcessor.TrsansactionReportingService.WSPaymentOrigin[] wspaymentOrigin, 
                    ACHProcessor.TrsansactionReportingService.WSSettlementStatus[] wssettlementStatus, 
                    ACHProcessor.TrsansactionReportingService.WSAuthResponseCode wsauthResponseCode, 
                    ACHProcessor.TrsansactionReportingService.WSOperationType wsopType, 
                    ACHProcessor.TrsansactionReportingService.WSFaceFeeType wsfaceFeeType, 
                    System.DateTime beginTransDate, 
                    System.DateTime endTransDate, 
                    string fromAmount, 
                    string toAmount) {
            return base.Channel.GetHistoricalEventWithTransactionDetailReport(storeId, storeKey, entityId, wsdisplayFields, locationIds, wstransEvent, wstransStatus, wssettlementType, wspaymentType, wspaymentOrigin, wssettlementStatus, wsauthResponseCode, wsopType, wsfaceFeeType, beginTransDate, endTransDate, fromAmount, toAmount);
        }
        
        public System.Threading.Tasks.Task<ACHProcessor.TrsansactionReportingService.WSEventWithTransactionDetailReport[]> GetHistoricalEventWithTransactionDetailReportAsync(
                    long storeId, 
                    string storeKey, 
                    int entityId, 
                    ACHProcessor.TrsansactionReportingService.WSDisplayFields[] wsdisplayFields, 
                    int[] locationIds, 
                    ACHProcessor.TrsansactionReportingService.WSTransactionEvent wstransEvent, 
                    ACHProcessor.TrsansactionReportingService.WSTransactionStatus[] wstransStatus, 
                    ACHProcessor.TrsansactionReportingService.WSSettlementType[] wssettlementType, 
                    ACHProcessor.TrsansactionReportingService.WSPaymentType wspaymentType, 
                    ACHProcessor.TrsansactionReportingService.WSPaymentOrigin[] wspaymentOrigin, 
                    ACHProcessor.TrsansactionReportingService.WSSettlementStatus[] wssettlementStatus, 
                    ACHProcessor.TrsansactionReportingService.WSAuthResponseCode wsauthResponseCode, 
                    ACHProcessor.TrsansactionReportingService.WSOperationType wsopType, 
                    ACHProcessor.TrsansactionReportingService.WSFaceFeeType wsfaceFeeType, 
                    System.DateTime beginTransDate, 
                    System.DateTime endTransDate, 
                    string fromAmount, 
                    string toAmount) {
            return base.Channel.GetHistoricalEventWithTransactionDetailReportAsync(storeId, storeKey, entityId, wsdisplayFields, locationIds, wstransEvent, wstransStatus, wssettlementType, wspaymentType, wspaymentOrigin, wssettlementStatus, wsauthResponseCode, wsopType, wsfaceFeeType, beginTransDate, endTransDate, fromAmount, toAmount);
        }
        
        public ACHProcessor.TrsansactionReportingService.WSEventReport[] GetHistoricalEvents(
                    long storeId, 
                    string storeKey, 
                    int entityId, 
                    ACHProcessor.TrsansactionReportingService.WSDisplayFields[] wsdisplayFields, 
                    int[] locationIds, 
                    ACHProcessor.TrsansactionReportingService.WSTransactionEvent[] wstransEvents, 
                    ACHProcessor.TrsansactionReportingService.WSTransactionStatus[] wstransStatus, 
                    ACHProcessor.TrsansactionReportingService.WSSettlementType[] wssettlementType, 
                    ACHProcessor.TrsansactionReportingService.WSPaymentType wspaymentType, 
                    ACHProcessor.TrsansactionReportingService.WSPaymentOrigin[] wspaymentOrigin, 
                    ACHProcessor.TrsansactionReportingService.WSSettlementStatus[] wssettlementStatus, 
                    ACHProcessor.TrsansactionReportingService.WSAuthResponseCode wsauthResponseCode, 
                    ACHProcessor.TrsansactionReportingService.WSOperationType wsopType, 
                    System.DateTime beginTransDate, 
                    System.DateTime endTransDate, 
                    string fromAmount, 
                    string toAmount) {
            return base.Channel.GetHistoricalEvents(storeId, storeKey, entityId, wsdisplayFields, locationIds, wstransEvents, wstransStatus, wssettlementType, wspaymentType, wspaymentOrigin, wssettlementStatus, wsauthResponseCode, wsopType, beginTransDate, endTransDate, fromAmount, toAmount);
        }
        
        public System.Threading.Tasks.Task<ACHProcessor.TrsansactionReportingService.WSEventReport[]> GetHistoricalEventsAsync(
                    long storeId, 
                    string storeKey, 
                    int entityId, 
                    ACHProcessor.TrsansactionReportingService.WSDisplayFields[] wsdisplayFields, 
                    int[] locationIds, 
                    ACHProcessor.TrsansactionReportingService.WSTransactionEvent[] wstransEvents, 
                    ACHProcessor.TrsansactionReportingService.WSTransactionStatus[] wstransStatus, 
                    ACHProcessor.TrsansactionReportingService.WSSettlementType[] wssettlementType, 
                    ACHProcessor.TrsansactionReportingService.WSPaymentType wspaymentType, 
                    ACHProcessor.TrsansactionReportingService.WSPaymentOrigin[] wspaymentOrigin, 
                    ACHProcessor.TrsansactionReportingService.WSSettlementStatus[] wssettlementStatus, 
                    ACHProcessor.TrsansactionReportingService.WSAuthResponseCode wsauthResponseCode, 
                    ACHProcessor.TrsansactionReportingService.WSOperationType wsopType, 
                    System.DateTime beginTransDate, 
                    System.DateTime endTransDate, 
                    string fromAmount, 
                    string toAmount) {
            return base.Channel.GetHistoricalEventsAsync(storeId, storeKey, entityId, wsdisplayFields, locationIds, wstransEvents, wstransStatus, wssettlementType, wspaymentType, wspaymentOrigin, wssettlementStatus, wsauthResponseCode, wsopType, beginTransDate, endTransDate, fromAmount, toAmount);
        }
        
        public System.Data.DataSet CreditandDebitReports(long storeId, string storeKey, int entityId, int[] locationIds, System.DateTime beginDate, System.DateTime endDate) {
            return base.Channel.CreditandDebitReports(storeId, storeKey, entityId, locationIds, beginDate, endDate);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> CreditandDebitReportsAsync(long storeId, string storeKey, int entityId, int[] locationIds, System.DateTime beginDate, System.DateTime endDate) {
            return base.Channel.CreditandDebitReportsAsync(storeId, storeKey, entityId, locationIds, beginDate, endDate);
        }
        
        public ACHProcessor.TrsansactionReportingService.WSCreditDebitReport[] GetCreditandDebitReports(long storeId, string storeKey, int entityId, int[] locationIds, System.DateTime beginDate, System.DateTime endDate) {
            return base.Channel.GetCreditandDebitReports(storeId, storeKey, entityId, locationIds, beginDate, endDate);
        }
        
        public System.Threading.Tasks.Task<ACHProcessor.TrsansactionReportingService.WSCreditDebitReport[]> GetCreditandDebitReportsAsync(long storeId, string storeKey, int entityId, int[] locationIds, System.DateTime beginDate, System.DateTime endDate) {
            return base.Channel.GetCreditandDebitReportsAsync(storeId, storeKey, entityId, locationIds, beginDate, endDate);
        }
        
        public ACHProcessor.TrsansactionReportingService.WSSettlementBatch[] CreditsandDebitsTransactionDetailReport(long storeId, string storeKey, int entityId, long batchId) {
            return base.Channel.CreditsandDebitsTransactionDetailReport(storeId, storeKey, entityId, batchId);
        }
        
        public System.Threading.Tasks.Task<ACHProcessor.TrsansactionReportingService.WSSettlementBatch[]> CreditsandDebitsTransactionDetailReportAsync(long storeId, string storeKey, int entityId, long batchId) {
            return base.Channel.CreditsandDebitsTransactionDetailReportAsync(storeId, storeKey, entityId, batchId);
        }
        
        public ACHProcessor.TrsansactionReportingService.WSCollectionSetting[] GetCollectionSettings(long storeId, string storeKey, int entityId) {
            return base.Channel.GetCollectionSettings(storeId, storeKey, entityId);
        }
        
        public System.Threading.Tasks.Task<ACHProcessor.TrsansactionReportingService.WSCollectionSetting[]> GetCollectionSettingsAsync(long storeId, string storeKey, int entityId) {
            return base.Channel.GetCollectionSettingsAsync(storeId, storeKey, entityId);
        }
        
        public ACHProcessor.TrsansactionReportingService.WSCollection[] GetCollectionReportBuilder(long storeId, string storeKey, int entityId, int[] locationIds, System.DateTime returnedBeginDate, System.DateTime returnedEndDate) {
            return base.Channel.GetCollectionReportBuilder(storeId, storeKey, entityId, locationIds, returnedBeginDate, returnedEndDate);
        }
        
        public System.Threading.Tasks.Task<ACHProcessor.TrsansactionReportingService.WSCollection[]> GetCollectionReportBuilderAsync(long storeId, string storeKey, int entityId, int[] locationIds, System.DateTime returnedBeginDate, System.DateTime returnedEndDate) {
            return base.Channel.GetCollectionReportBuilderAsync(storeId, storeKey, entityId, locationIds, returnedBeginDate, returnedEndDate);
        }
        
        public ACHProcessor.TrsansactionReportingService.WSCollectionDetail GetCollectionDetails(long storeId, string storeKey, int entityId, long collectionId) {
            return base.Channel.GetCollectionDetails(storeId, storeKey, entityId, collectionId);
        }
        
        public System.Threading.Tasks.Task<ACHProcessor.TrsansactionReportingService.WSCollectionDetail> GetCollectionDetailsAsync(long storeId, string storeKey, int entityId, long collectionId) {
            return base.Channel.GetCollectionDetailsAsync(storeId, storeKey, entityId, collectionId);
        }
    }
}
