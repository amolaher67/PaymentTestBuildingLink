@model ACHProcessor.Models.MakePayment

@{
	//ViewBag.Title = "Make Payment";
}

<h3 style="text-align:center">Make Payment</h3>
@using (Html.BeginForm("MakePayment", "Home", FormMethod.Post, new { @id = "TranForm", onsubmit = " return SubmitForm()" }))
{

	//@Html.AntiForgeryToken()

	<div class="form-horizontal">
		<hr />
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
		@*<div class="form-group">
				@Html.LabelFor(model => model.TransactionNumber, "Transaction Number", htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.TransactionNumber, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.TransactionNumber, "", new { @class = "text-danger" })
				</div>
			</div>*@

		<div class="form-group">
			@Html.LabelFor(model => model.AccountNumber, "Account Number", htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.AccountNumber, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.AccountNumber, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.AccountType, "Account Type", htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				Checking : @Html.RadioButtonFor(model => model.AccountType, new { htmlAttributes = new { @class = "form-control" } })
				Saving : @Html.RadioButtonFor(model => model.AccountType, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.AccountType, "", new { @class = "text-danger" })
			</div>
		</div>

		@*<div class="form-group">
				@Html.LabelFor(model => model.PaymentOrigin, "Payment Origin", htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.PaymentOrigin, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.PaymentOrigin, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.SettlementType, "Settlement Type", htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.SettlementType, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.SettlementType, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.OperationType, "Operation Type", htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.OperationType, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.OperationType, "", new { @class = "text-danger" })
				</div>
			</div>*@

		<div class="form-group">
			@Html.LabelFor(model => model.TotalAmount, "Total Amount", htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.TotalAmount, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.TotalAmount, "", new { @class = "text-danger" })
			</div>
		</div>

		@*<div class="form-group">
				@Html.LabelFor(model => model.CheckMICRLine, "Check MICR Line", htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.CheckMICRLine, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.CheckMICRLine, "", new { @class = "text-danger" })
				</div>
			</div>*@

		<div class="form-group">
			@Html.LabelFor(model => model.RoutingNumber, "Routing Number", htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.RoutingNumber, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.RoutingNumber, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.NameOnAccount, "Name On Account", htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.NameOnAccount, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.NameOnAccount, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group" hidden>
			@Html.LabelFor(model => model.PresentmentNumber, "Present Number", htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.PresentmentNumber, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.PresentmentNumber, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.IsBusinessPayment, "Is Business Payment", htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				<div class="checkbox">
					Yes @Html.CheckBoxFor(model => model.IsBusinessPayment)
					<br />
					No @Html.CheckBoxFor(model => model.IsBusinessPayment)
					@Html.ValidationMessageFor(model => model.IsBusinessPayment, "", new { @class = "text-danger" })
				</div>
			</div>
		</div>

		<div class="form-group">
			<div class="col-md-offset-2 col-md-10">
				<input type="submit" value="Create" class="btn btn-default" />
			</div>
		</div>
	</div>
}

<div name="Response" id="showTransactionResponse" class="text-danger" style="border:1px solid red;padding:4px 4px 4px 4px" hidden>
</div>

@section scripts
{
	<script>
		function SubmitForm() {


			var form = $("#TranForm");
			form.validate();
			if (form.valid()) {

				$('#showTransactionResponse').html('')
				$('#showTransactionResponse').hide();

				$.ajax(
					{
						url: '@Url.Action("MakePayment", "Home")',
						data: $("#TranForm").serialize(),
						dataType: "json",
						cache: false,
						type: "POST",
						success: function (data) {
							if (data != null) {
								if (data.Success == true) { data.ResponseMessage = "Payment Done Successfully !" }
								var message = data.ResponseMessage;
								$('#showTransactionResponse').html(message)
								$('#showTransactionResponse').show();
							}
						},
						error: function (error) {
							$('#showTransactionResponse').html(JSON.stringify(error))
							$('#showTransactionResponse').show();
						}
					});
			}

				return false;


		}

	</script>
}
